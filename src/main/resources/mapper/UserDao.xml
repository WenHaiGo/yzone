<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yzone.dao.UserDao">
    <select id="isExist" resultType="java.lang.Integer" parameterType="java.lang.String">
        SELECT count(*)
        FROM user
        WHERE username = #{username}
    </select>
    <select id="checkLogin" resultType="java.lang.Integer" parameterType="map">
        SELECT count(*)
        FROM user
        WHERE username = #{username} AND password = #{password}
    </select>

    <insert id="register" parameterType="map">
        INSERT INTO user (username, password) VALUES (#{username}, #{password});
    </insert>

    <select id="getUserByUsername" parameterType="java.lang.String" resultType="User">
        /*最后发现随着业务的需要所需要的字段越来越多*/
        SELECT
            id,
            username,
            head_portrait,
            address,
            bg_picture,
            profession,
            school,
            sex,
            person_signature

        FROM user
        WHERE username = #{username};
    </select>


    <select id="getUserById" parameterType="java.lang.Integer" resultType="User">
        SELECT
            head_portrait,
            username,
            person_signature
        FROM user
        WHERE id = #{uid}
    </select>

    <select id="fuzzyQuery" resultType="user" parameterType="java.lang.String">
        SELECT
            username,
            head_portrait
        FROM user
        WHERE username LIKE '%' #{key} '%';
    </select>

    <insert id="followByUserName" parameterType="map">
        INSERT INTO follow_person (uid, follow_uid, create_time) VALUES (#{uid},#{followUid},now());
    </insert>

    <select id="getAll" resultType="User">
        SELECT  username,sex, create_time,address,school,profession FROM user;
    </select>


    <delete id="deleteByUid" parameterType="Integer">
        DELETE FROM user WHERE id = #{uid}
    </delete>


    <select id="manageLogin" parameterType="map" resultType="ManageUser">

        select `manage_user`.*,manage_role_user.role_id from manage_user join manage_role_user on `manage_user`.id=manage_role_user.uid  where name=#{username} and pwd=#{password}

    </select>


    <select id="getFemale" resultType="Long">
        select ifnull(count(*),0)
        from user WHERE sex=0;
    </select>

<select id="getMale" resultType="Long">
    select ifnull(count(*),0)
    from user WHERE sex=1;
</select>

</mapper>

